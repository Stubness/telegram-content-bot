from aiogram import Dispatcher, types
from config import ADMIN_ID, CHANNEL_ID

def register_handlers(dp: Dispatcher):
    @dp.message(lambda msg: msg.photo or msg.video or msg.text)
    async def handle_submission(message: types.Message):
        print("üì• handle_submission —Å—Ä–∞–±–æ—Ç–∞–ª")

        sender = message.from_user.username or message.from_user.full_name or "unknown"
        sender_id = message.from_user.id
        caption = message.caption or message.text or "(no text)"

        print(f"üë§ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç: {sender} (ID: {sender_id})")
        print(f"üìù Caption/Text: {caption}")

        try:
            keyboard = types.InlineKeyboardMarkup(inline_keyboard=[
                [
                    types.InlineKeyboardButton(
                        text="‚úÖ Publish",
                        callback_data=f"approve|{sender}|{message.message_id}"
                    ),
                    types.InlineKeyboardButton(
                        text="‚ùå Reject",
                        callback_data="reject"
                    )
                ]
            ])

            print(f"üì§ –ü—ã—Ç–∞—é—Å—å –ø–µ—Ä–µ—Å–ª–∞—Ç—å –∞–¥–º–∏–Ω—É ({ADMIN_ID})...")
            forwarded = await message.send_copy(chat_id=ADMIN_ID)
            await forwarded.reply(
                f"Submitted by @{sender}:\n\n{caption}",
                reply_markup=keyboard
            )
            print("‚úÖ –ü–µ—Ä–µ—Å–ª–∞–Ω–æ –∞–¥–º–∏–Ω—É")

            # üëá –í–æ—Ç —ç—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ: –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await message.reply("‚úÖ Thank you! Your content has been submitted for review.")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ –∞–¥–º–∏–Ω—É: {e}")

    @dp.callback_query()
    async def handle_callback(callback: types.CallbackQuery):
        data = callback.data
        if data.startswith("approve"):
            _, sender, _ = data.split("|")
            original = callback.message.reply_to_message
            caption = original.caption or original.text or ""

            try:
                print(f"üì§ –ü—É–±–ª–∏–∫—É—é –≤ –∫–∞–Ω–∞–ª: {CHANNEL_ID}")
                if original.photo:
                    await callback.bot.send_photo(
                        chat_id=CHANNEL_ID,
                        photo=original.photo[-1].file_id,
                        caption=f"üì® From @{sender}:\n\n{caption}"
                    )
                elif original.video:
                    await callback.bot.send_video(
                        chat_id=CHANNEL_ID,
                        video=original.video.file_id,
                        caption=f"üì® From @{sender}:\n\n{caption}"
                    )
                elif original.text:
                    await callback.bot.send_message(
                        chat_id=CHANNEL_ID,
                        text=f"üì® From @{sender}:\n\n{caption}"
                    )

                await callback.message.edit_text("‚úÖ Published to channel")
                print("‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª: {e}")
                await callback.message.edit_text("‚ùå Failed to publish")
        elif data == "reject":
            await callback.message.edit_text("‚ùå Rejected")
